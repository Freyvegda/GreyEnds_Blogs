generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  name     String?
  password String
  catchPhrase String?
  posts    Blog[]
  comments Comment[]
  likes   Like[]
  bookmark Bookmark[]
}

model Blog {
  id        String   @id @default(uuid())
  title     String
  content   String
  published Boolean  @default(false)
  publishedDate DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  tags      Tag[]    @relation("BlogTags")
  comments Comment[]
  likes     Like[]
  bookmark Bookmark[]
}

model Tag{
  id String @id @default(uuid())
  name String @unique
  blogs Blog[] @relation("BlogTags")
}

model Comment{
  id String @id @default(uuid())
  content String 
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  blog      Blog     @relation(fields: [blogId], references: [id])
  blogId    String
}
model Like {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  blog      Blog     @relation(fields: [blogId], references: [id])
  blogId    String
  createdAt DateTime @default(now())

  @@unique([userId, blogId]) // Prevent duplicate likes
}

model Bookmark{
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  blog Blog @relation(fields: [blogId], references: [id])
  blogId String

  @@unique([userId, blogId])
}